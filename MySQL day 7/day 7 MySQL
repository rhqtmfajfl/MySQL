day 7






몽고 디비 mongoexport json 형식의 파일을 데리고 나오는 것 

~~.json이 좋다.

export 할 때 몽고 디비 명령어

mongoexport --db 데이터베이스명 -c 컬렉션명 --out 파일 경로 + 파일 명(없으면 새로 만들어서 넣는다.)  test.json

mongoimport --db 데이터베이스명 -c 컬렉션명 --out 파일 경로 




//////////////


20 페이지 

> db.book.find({},{‘name’ : true})
 첫번째 공백 으로 주고 name을 ture를하면 이름을 출력하겠다.
 
 
 db.book.find({},{'name' : true, '_id' : false})
 
 이름은 true로 출력하고 id는 false로 안보이게 한다.
 
 name : 1은 treu id : 0 하면 false로 출력 안한다.
 
 여기서 1이외에 다른 정수가 와도 된다.
 
 
 
 **
  db.book.find({},{name : true, price : 1, _id : false})  -> 가능
 _id를 false로 주면 나머지 필드들의 value를 true나 false 둘중 한개의 값으로 다 통일 해야 한다.
아니면 _id가 등장하지 않으면 다른 필드들의 값이 달라도 괜찮다.
 db.book.find({},{name : true, price : 0}) 일때 다르게 가능
 
 
  db.book.find({},{name : true, price : 0, _id : false})
  db.book.find({},{name : false, price : 1, _id : false})
   이런 것들은 불가능하다.
**





find()에서{} 첫번째는 필터링 정보
필터링 정보를 생략하면 필드 정보의 내용이 필터링정보로 생각된다.

find()에서 객체의형식은 갖춰야하기 때문에 {} 중괄호 형태가 정확히 와야 된다.

예외로 db.book.find(null, {'name':1}) 가능 
조건이 없는 경우라면 null 을 주거나 {} 객체를 주면 된다.

단!!!! 생략 하면 안된다.




###
db.book.find(
{price : {$lt : 10000}}  , {name : true, price : true, _id : false})
이 문장은 필터링의 정보와 객체의 정보를 두다 줬다.

이 몽고디비 구문은 전달하고하는 데이터를 json 객체로 전달하고자 한다.

json 객체는  중괄호 주고 안에 네입 벨류로 중괄호를 더 하나 더준덗

연산자를 json 객체에서 name 으로 사용하고 있다.

{price : {$lt : 10000}}  ->>>>>> 필터에 해당하는 객체 
객체를 필터 하고자 하는 조건
이 문장은 select 에서 where 절이 하는 일이다.



그리고
{name : true, price : true, _id : false}  value도 객체이다.
추출하고자하는 컬럼의 정보

필드 정보를 담고자하는 객체에 id 가 오면 다른 필드는똑같이 와야 한다.

이 부분은 sql문에서 select 절이 하는 일이다.


###
db.book.find({$and : [ {price : {$gte : 10000}}, {price : {$lt : 20000}}]}, {name : true, price : true, _id : false}

여기서 

{$and : [ {price : {$gte : 10000}}, {price : {$lt : 20000}}]}  -> json 형식으로 연산자를 만들었다.
객체에 값을 여러개 주고 싶으면 [] 배열 사용

and 논리 곱이라는 의미 두개의 비교식이 모두 같을때 true

두개의 벨류  식을 줘야 하니까 리스트로 하고 있다.

첫번재 비교식도 중과호 두번째 비교식도 중괄호

pirce 가 10000보다 크거나 같고

20000원 보다는 작은 데이터의 정보만 출력 하겠다.




메소드 호출 할 때 argument로 호출 해야 한다.






어떤 조건에 만족하는 것을 꺼낸다음에 도큐먼트의 개수만 알 고 싶을 때

(자바에서 메소드 호출할때 매개변수 사항에 맞춰서 argument 를 반드시 반환 해야 한다.)


void print(int p1, String p2) 매개 변수를정의 했다 하면

print(10, "abc") 매개변수의 개수를 맞춰야 하지만

자바스크립트는 매개변수가 3개 있어도 argument를 3개가 아니라 4개 전달 해도 오류가 안생긴다.

두개의 매개 변수가 있는데
하나의 argument를 전달해도 에러가 안난다.

그런데 순서적으로 p1한테는 전달 안하고 p2한테만 전달하는게 안된다.

그래서 필터에 null이라도 줘야한다.


가격이 8000원 초과인

find 메소드는 리턴값의 유형이 디비 쿼리 객체의 count라는 메소드를 호출하여 추출된 도큐먼트 개수를 알 수 있다.





> db.book.find({"name": { "$regex" : "^java"}})

여기서 $는 연산자를 정의 할 때 사용

name이 자바로 시작하는 데이터만 꺼내라


$regex 연산자는 생략 가능하다.

 db.book.find({"name": /^java/})


앞에 / 슬래시를 붙이면 정규 표현식 객체로 인식 한다. 정규 표현식 객체를 연산자로 사용 가능

$regex는 기능이 한두가지 더 있는데 그닥 안쓴다. 그래서 $regex 대신 /가 더 간편하다. 앞뒤에 / 를 붙이면 정규식표현이 되는 것은 자바 스크립트의 기능이다.








































































   
